<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestor de Ganhos</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <!-- Google Fonts: Roboto -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <style>
        :root {
            --primary-color: #007bff;
            --secondary-color: #00bfff;
            --bg-gradient: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            --card-bg: white;
            --text-color: #333;
            --body-bg: #f8f9fa;
        }

        body.dark {
            --card-bg: #1e1e1e;
            --text-color: #ddd;
            --body-bg: #121212;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--body-bg);
            color: var(--text-color);
            transition: background-color 0.3s, color 0.3s;
        }

        .login-container {
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--bg-gradient);
        }

        .login-card {
            background: var(--card-bg);
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            max-width: 400px;
            width: 100%;
            animation: fadeIn 1s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .navbar {
            background: var(--bg-gradient);
            color: white;
        }

        .card {
            background: var(--card-bg);
            border: none;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .money-animation {
            position: relative;
            overflow: hidden;
        }

        .money-animation::before {
            content: 'üí∞';
            position: absolute;
            top: -50px;
            left: 50%;
            font-size: 2rem;
            animation: fall 2s linear infinite;
            opacity: 0.5;
        }

        @keyframes fall {
            0% { transform: translateY(0) rotate(0deg); }
            100% { transform: translateY(100vh) rotate(360deg); }
        }

        .chart-container {
            position: relative;
            height: 300px;
        }

        .filter-section {
            margin-bottom: 2rem;
        }
    </style>
</head>
<body>

    <!-- Login Page -->
    <div id="login-page" class="login-container">
        <div class="login-card text-center">
            <h2 class="mb-4">Gestor de Ganhos</h2>
            <form id="login-form">
                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" value="lipeabreu1313@gmail.com" required>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Senha</label>
                    <input type="password" class="form-control" id="password" value="1234" required>
                </div>
                <button type="submit" class="btn btn-primary w-100">Entrar</button>
            </form>
        </div>
    </div>

    <!-- Dashboard -->
    <div id="dashboard" style="display: none;">
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">Gestor de Ganhos</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <button id="theme-toggle" class="btn btn-light me-2"><i class="fas fa-moon"></i></button>
                        </li>
                        <li class="nav-item">
                            <button id="logout" class="btn btn-danger">Sair</button>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <div class="container mt-4">
            <!-- Dashboard Cards -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card money-animation">
                        <div class="card-body">
                            <h5 class="card-title"><i class="fas fa-wallet"></i> Saldo Total</h5>
                            <h3 id="total-balance">R$ 0.00</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title"><i class="fas fa-arrow-up"></i> Ganhos Totais</h5>
                            <h3 id="total-gains">R$ 0.00</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title"><i class="fas fa-arrow-down"></i> Perdas Totais</h5>
                            <h3 id="total-losses">R$ 0.00</h3>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Form to Add Entry -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Adicionar Registro</h5>
                    <form id="entry-form">
                        <div class="row">
                            <div class="col-md-3">
                                <label for="date" class="form-label">Data</label>
                                <input type="date" class="form-control" id="date" required>
                            </div>
                            <div class="col-md-3">
                                <label for="amount" class="form-label">Valor (positivo para ganho, negativo para perda)</label>
                                <input type="number" step="0.01" class="form-control" id="amount" required>
                            </div>
                            <div class="col-md-4">
                                <label for="description" class="form-label">Descri√ß√£o</label>
                                <input type="text" class="form-control" id="description">
                            </div>
                            <div class="col-md-2 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary w-100">Adicionar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Filters -->
            <div class="filter-section card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Filtros</h5>
                    <div class="row">
                        <div class="col-md-3">
                            <label for="start-date" class="form-label">Data In√≠cio</label>
                            <input type="date" class="form-control" id="start-date">
                        </div>
                        <div class="col-md-3">
                            <label for="end-date" class="form-label">Data Fim</label>
                            <input type="date" class="form-control" id="end-date">
                        </div>
                        <div class="col-md-3">
                            <label for="type-filter" class="form-label">Tipo</label>
                            <select class="form-select" id="type-filter">
                                <option value="all">Todos</option>
                                <option value="gain">Ganhos</option>
                                <option value="loss">Perdas</option>
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end">
                            <button id="apply-filter" class="btn btn-primary w-100">Aplicar</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Entries Table -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Registros</h5>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Data</th>
                                <th>Valor</th>
                                <th>Descri√ß√£o</th>
                                <th>Tipo</th>
                            </tr>
                        </thead>
                        <tbody id="entries-table"></tbody>
                    </table>
                </div>
            </div>

            <!-- Graphs -->
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title"><i class="fas fa-chart-line"></i> Saldo ao Longo do Tempo</h5>
                            <div class="chart-container">
                                <canvas id="balance-chart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title"><i class="fas fa-chart-bar"></i> Ganhos vs Perdas</h5>
                            <div class="chart-container">
                                <canvas id="gains-losses-chart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Hardcoded credentials
        const USER_EMAIL = 'lipeabreu1313@gmail.com';
        const USER_PASSWORD = '1234';

        // Local Storage Keys
        const AUTH_KEY = 'auth';
        const ENTRIES_KEY = 'entries';

        // Load entries from localStorage
        let entries = JSON.parse(localStorage.getItem(ENTRIES_KEY)) || [];

        // Login Form
        document.getElementById('login-form').addEventListener('submit', (e) => {
            e.preventDefault();
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            if (email === USER_EMAIL && password === USER_PASSWORD) {
                localStorage.setItem(AUTH_KEY, 'true');
                showDashboard();
            } else {
                alert('Credenciais inv√°lidas!');
            }
        });

        // Check if already logged in
        if (localStorage.getItem(AUTH_KEY) === 'true') {
            showDashboard();
        }

        function showDashboard() {
            document.getElementById('login-page').style.display = 'none';
            document.getElementById('dashboard').style.display = 'block';
            updateSummary();
            updateTable();
            updateCharts();
        }

        // Logout
        document.getElementById('logout').addEventListener('click', () => {
            localStorage.removeItem(AUTH_KEY);
            location.reload();
        });

        // Theme Toggle
        const themeToggle = document.getElementById('theme-toggle');
        themeToggle.addEventListener('click', () => {
            document.body.classList.toggle('dark');
            const icon = themeToggle.querySelector('i');
            if (document.body.classList.contains('dark')) {
                icon.classList.replace('fa-moon', 'fa-sun');
            } else {
                icon.classList.replace('fa-sun', 'fa-moon');
            }
        });

        // Add Entry
        document.getElementById('entry-form').addEventListener('submit', (e) => {
            e.preventDefault();
            const date = document.getElementById('date').value;
            const amount = parseFloat(document.getElementById('amount').value);
            const description = document.getElementById('description').value;
            const type = amount > 0 ? 'Ganho' : 'Perda';
            entries.push({ date, amount, description, type });
            localStorage.setItem(ENTRIES_KEY, JSON.stringify(entries));
            updateSummary();
            updateTable();
            updateCharts();
            e.target.reset();
        });

        // Apply Filters
        document.getElementById('apply-filter').addEventListener('click', () => {
            updateTable();
            updateCharts();
        });

        function getFilteredEntries() {
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;
            const typeFilter = document.getElementById('type-filter').value;

            return entries.filter(entry => {
                let dateMatch = true;
                if (startDate) dateMatch = dateMatch && (entry.date >= startDate);
                if (endDate) dateMatch = dateMatch && (entry.date <= endDate);
                let typeMatch = true;
                if (typeFilter !== 'all') {
                    typeMatch = (typeFilter === 'gain' && entry.amount > 0) || (typeFilter === 'loss' && entry.amount < 0);
                }
                return dateMatch && typeMatch;
            });
        }

        function updateSummary() {
            const filtered = getFilteredEntries();
            const totalBalance = filtered.reduce((sum, entry) => sum + entry.amount, 0);
            const totalGains = filtered.filter(e => e.amount > 0).reduce((sum, e) => sum + e.amount, 0);
            const totalLosses = Math.abs(filtered.filter(e => e.amount < 0).reduce((sum, e) => sum + e.amount, 0));

            document.getElementById('total-balance').textContent = `R$ ${totalBalance.toFixed(2)}`;
            document.getElementById('total-gains').textContent = `R$ ${totalGains.toFixed(2)}`;
            document.getElementById('total-losses').textContent = `R$ ${totalLosses.toFixed(2)}`;
        }

        function updateTable() {
            const filtered = getFilteredEntries();
            const tableBody = document.getElementById('entries-table');
            tableBody.innerHTML = '';
            filtered.forEach(entry => {
                const row = `<tr>
                    <td>${entry.date}</td>
                    <td>R$ ${entry.amount.toFixed(2)}</td>
                    <td>${entry.description || ''}</td>
                    <td>${entry.type}</td>
                </tr>`;
                tableBody.innerHTML += row;
            });
            updateSummary();
        }

        let balanceChart, gainsLossesChart;

        function updateCharts() {
            const filtered = getFilteredEntries().sort((a, b) => new Date(a.date) - new Date(b.date));

            // Balance over time
            const dates = [...new Set(filtered.map(e => e.date))];
            const balances = [];
            let cumulative = 0;
            dates.forEach(date => {
                const dayAmount = filtered.filter(e => e.date === date).reduce((sum, e) => sum + e.amount, 0);
                cumulative += dayAmount;
                balances.push(cumulative);
            });

            if (balanceChart) balanceChart.destroy();
            balanceChart = new Chart(document.getElementById('balance-chart'), {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Saldo',
                        data: balances,
                        borderColor: 'blue',
                        fill: false
                    }]
                },
                options: { responsive: true, maintainAspectRatio: false }
            });

            // Gains vs Losses
            const monthlyGains = {};
            const monthlyLosses = {};
            filtered.forEach(entry => {
                const month = entry.date.slice(0, 7);
                if (!monthlyGains[month]) monthlyGains[month] = 0;
                if (!monthlyLosses[month]) monthlyLosses[month] = 0;
                if (entry.amount > 0) {
                    monthlyGains[month] += entry.amount;
                } else {
                    monthlyLosses[month] += Math.abs(entry.amount);
                }
            });

            const months = [...new Set([...Object.keys(monthlyGains), ...Object.keys(monthlyLosses)])].sort();

            if (gainsLossesChart) gainsLossesChart.destroy();
            gainsLossesChart = new Chart(document.getElementById('gains-losses-chart'), {
                type: 'bar',
                data: {
                    labels: months,
                    datasets: [
                        { label: 'Ganhos', data: months.map(m => monthlyGains[m] || 0), backgroundColor: 'green' },
                        { label: 'Perdas', data: months.map(m => monthlyLosses[m] || 0), backgroundColor: 'red' }
                    ]
                },
                options: { responsive: true, maintainAspectRatio: false }
            });
        }
    </script>
</body>
</html>